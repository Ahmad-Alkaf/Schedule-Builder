// @use '@angular/material'as mat;

// @include mat.core();

// // Define a light theme
// $light-primary: mat.define-palette(mat.$indigo-palette);
// $light-accent: mat.define-palette(mat.$pink-palette);
// $light-theme: mat.define-light-theme((color: (primary: $light-primary,
//       accent: $light-accent,
//     )));

// // Define a dark theme
// $dark-primary: mat.define-palette(mat.$purple-palette);
// $dark-accent: mat.define-palette(mat.$green-palette);
// $dark-theme: mat.define-dark-theme((color: (primary: $dark-primary,
//       accent: $dark-accent,
//     )));

// // Apply the dark theme by default
// .my-light-theme{  
//   @include mat.core-theme($light-theme);
//   @include mat.button-theme($light-theme);
//   .theme-text-primary{
//     color: #{mat-color(map-get($light-theme, primary))};
//   }
// }

// // Apply the light theme only when the `.my-light-theme` CSS class is applied
// // to an ancestor element of the components (such as `body`).
// .my-dark-theme {
//   @include mat.core-color($dark-theme);
//   @include mat.button-color($dark-theme);
// }

// //text
// .my-dark-theme > .theme-text-primary {
//  color: mat.get-color-from-palette($dark-theme, '400');
// }


// //bg
// .my-dark-theme>.theme-bg-primary{
//   background-color: mat.get-color-from-palette($dark-theme,'400');
// }
// .my-light-theme>.theme-bg-primary{
//   background-color: mat.get-color-from-palette($light-theme,'400');
// }

@import "./assets/functions";
@import "~@angular/material/theming";

// You have to define one of those for every theme you offer
.dark-theme-purple {
  @import "./themes/purple";

  $purple-theme: mat-dark-theme($purple-theme-primary,
      $purple-theme-accent,
      $purple-theme-warn);
  @include angular-material-theme($purple-theme);
  @include angular-material-theme($purple-theme);
  @include generate-theme-vars($purple-theme);
}// You have to define one of those for every theme you offer
.light-theme-purple {
  @import "./themes/purple";

  $purple-theme: mat-light-theme($purple-theme-primary,
      $purple-theme-accent,
      $purple-theme-warn);
  @include angular-material-theme($purple-theme);
  @include angular-material-theme($purple-theme);
  @include generate-theme-vars($purple-theme);
}

.light-theme-indigo {
  @import "./themes/indigo";
  $indigo-theme: mat-light-theme($indigo-theme-primary,
      $indigo-theme-accent,
      $indigo-theme-warn);
  @include angular-material-theme($indigo-theme);
  @include angular-material-theme($indigo-theme);
  @include generate-theme-vars($indigo-theme);
}

.dark-theme-indigo {
  @import "./themes/indigo";
  $indigo-theme: mat-dark-theme($indigo-theme-primary,
      $indigo-theme-accent,
      $indigo-theme-warn);
  @include angular-material-theme($indigo-theme);
  @include angular-material-theme($indigo-theme);
  @include generate-theme-vars($indigo-theme);
}

.dark-theme-yellow {
  @import "./themes/yellow";
  $yellow-theme: mat-dark-theme($yellow-theme-primary,
      $yellow-theme-accent,
      $yellow-theme-warn);

  @include angular-material-theme($yellow-theme);
  @include angular-material-theme($yellow-theme);
  @include generate-theme-vars($yellow-theme);
}

.light-theme-yellow {
  @import "./themes/yellow";
  $yellow-theme: mat-light-theme($yellow-theme-primary,
      $yellow-theme-accent,
      $yellow-theme-warn);

  @include angular-material-theme($yellow-theme);
  @include angular-material-theme($yellow-theme);
  @include generate-theme-vars($yellow-theme);
}

.theme-text-primary {
  color: var(--primary-color);
}

.theme-text-accent {
  color: var(--accent-color);
}

.theme-bg-primary {
  background-color: var(--primary-color);
}

.theme-bg-accent {
  background-color: var(--accent-color);
}

@import url(./assets/bootstrap.css);
@import url("./assets/icon.css");
@import url("./assets/google.font.style.css");


html {
  height: 100vh !important;
}

body {
  border: 0;
  padding: 0;
  background-color: var(--background-color) !important;
  width: 100%;
  height: 100%;
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

.aligned-with-icon {
  position: relative;
  top: -3px;
  margin-left: 8px;
  /* optional */
}

html,
body {
  height: 100%;
}

body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

.lecture-handle {
  position: absolute;
  top: 5px;
  left: 5px;
  cursor: move;
  width: 18px;
  height: 18px;
  color: var(--primary-color);
}

.cdk-drag-preview {
  box-sizing: border-box;
  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),
    0 8px 10px 1px rgba(0, 0, 0, 0.14),
    0 3px 14px 2px rgba(0, 0, 0, 0.12);
}

.cdk-drag-placeholder {
  opacity: 0;
  height: 64px !important;
  padding: 0 !important;
  margin: 0 !important;
}

.cdk-drag-animating {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

.cdk-drop-list-dragging :not(.cdk-drag-placeholder) {
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

.td {
  position: relative;
  height: 65px !important;
  text-align: center;
  vertical-align: middle;
  border: 1px solid var(--disabled-color);
  padding: 0vh !important;
  margin: 0px !important
}

.td:focus {
  outline: 1.8px dotted #555 !important;
  border: none;
}

.td:focus.collTeacher,
.td:focus.collRoom {
  outline: 1.8px dotted var(--warn-color) !important;
  border: none;
}



.collTeacher {
  outline: 2px solid var(--warn-color) !important;
  border: none !important;
}

.collTeacher app-td div div.teacherDiv {
  animation: flash 1200ms infinite linear;
  color: var(--warn-color);
}

.collRoom {
  outline: 2px solid var(--warn-color) !important;
  border: none !important;
}

.collRoom app-td div div.roomDiv {
  animation: flash 1200ms infinite;
  color: var(--warn-color);
}

@keyframes flash {

  /* 0%{
    color:white;
  } */
  0% {
    color: var(--warn-color);
  }

  30% {
    color: var(--warn-color);
  }

  50% {
    color: white;
  }

  60% {
    color: var(--warn-color);
  }
}
